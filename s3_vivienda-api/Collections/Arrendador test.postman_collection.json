{
	"info": {
		"_postman_id": "389f69d7-9902-417b-baaf-164c4e472798",
		"name": "Arrendador test",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Crear un arrendador",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "7af7bb22-41af-4200-9481-0a69001feef2",
						"type": "text/javascript",
						"exec": [
							"var data = JSON.parse(responseBody);",
							"postman.setGlobalVariable(\"new_id_a\",data.id);",
							"tests[\"no genera error en el Post\"] = responseCode.code === 200;"
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"nombre\":\"Pedro\",\n\t\"login\":\"PedroPerez\",\n\t\"password\":\"123456\"\n\t\n}"
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s3_vivienda-api/api/arrendadores",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s3_vivienda-api",
						"api",
						"arrendadores"
					]
				},
				"description": "\nCrea un nuevo arrendador. El recurso tiene los atributos nombre,login, password. El atributo \"login\" debe ser único. El Id es inicializado por la BD y se debe ver en la respuesta. \n\nPara la prueba, se guarda el id en una variable que será utilizada en otras peticiones de la colección.\nCódigo http esperado: 200"
			},
			"response": []
		},
		{
			"name": "Crear un arrendador 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "ee305567-6604-422e-8347-14c29709c076",
						"type": "text/javascript",
						"exec": [
							"var data = JSON.parse(responseBody);",
							"postman.setGlobalVariable(\"new_id_a2\",data.id);",
							"tests[\"no genera error en el Post\"] = responseCode.code === 200;"
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"nombre\":\"mario\",\n\t\"login\":\"mario1\",\n\t\"password\":\"123456\"\n\t\n}"
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s3_vivienda-api/api/arrendadores",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s3_vivienda-api",
						"api",
						"arrendadores"
					]
				},
				"description": "Crea un nuevo arrendador. El recurso tiene los atributos nombre, login, password. El Id es inicializado por la BD y se debe ver en la respuesta.\r\n\r\nPara la prueba, se guarda el id en una variable que será utilizada en otras peticiones de la colección.\r\nCódigo http esperado: 200"
			},
			"response": []
		},
		{
			"name": "Crear arrendador con login repetido",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "2814a002-a58d-47ae-bea3-f2f9055640b5",
						"type": "text/javascript",
						"exec": [
							"tests[\"No crea con el mismo login\"] = responseCode.code === 412;",
							"tests[\"Mensaje correcto de error\"] = responseBody.has(\"Ya existe un arrendador con ese login\");"
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"nombre\":\"juan\",\n\t\"login\":\"mario1\",\n\t\"password\":\"123456\"\n\t\n}"
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s3_vivienda-api/api/arrendadores",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s3_vivienda-api",
						"api",
						"arrendadores"
					]
				},
				"description": "Crea un arrendador con un login que ya existe. Verifica que genere error y el mensaje \"Ya existe un arrendador con ese login\".\nCódigo http esperado: 412"
			},
			"response": []
		},
		{
			"name": "Crear arrendador con password invalida",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "f3b09d2b-ee42-4304-8048-283c8553a327",
						"type": "text/javascript",
						"exec": [
							"tests[\"No crea con esa password\"] = responseCode.code === 412;",
							"tests[\"Mensaje correcto de error\"] = responseBody.has(\"La contraseña es invalida\");"
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"nombre\":\"Pedro\",\n\t\"login\":\"PedroPerez\",\n\t\"password\":\" \"\n\t\n}"
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s3_vivienda-api/api/arrendadores",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s3_vivienda-api",
						"api",
						"arrendadores"
					]
				},
				"description": "Crea un arrendador con una contraseña invalida. Verifica que se genera error y el mensaje \"La contraseña es invalida\".\nCódigo http esperado: 412"
			},
			"response": []
		},
		{
			"name": "Obtener arrendador",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "a3fb5a9a-2e67-401b-ae19-fe71330d4100",
						"type": "text/javascript",
						"exec": [
							"console.log(responseBody);",
							"var data = JSON.parse(responseBody);",
							"tests[\"No genera error en el Get\"] = responseCode.code === 200;"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s3_vivienda-api/api/arrendadores/{{new_id_a}}",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s3_vivienda-api",
						"api",
						"arrendadores",
						"{{new_id_a}}"
					]
				},
				"description": "Consulta todos los arrendadores de la aplicación. La petición no tiene cuerpo.\r\n\r\nPara la prueba, se verifica que el conjunto de arrendadores en la respuesta tenga mas de uno.\r\nCódigo http esperado: 200"
			},
			"response": []
		},
		{
			"name": "Obtener arrendadores",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "a32ea2f8-b35e-45a1-802b-6382a4464b73",
						"type": "text/javascript",
						"exec": [
							"var data= JSON.parse(responseBody);",
							"tests[\"No genera error en el Get all\"] = responseCode.code === 200;",
							"tests[\"arrendadores count\"] = data.length > 1;"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s3_vivienda-api/api/arrendadores/",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s3_vivienda-api",
						"api",
						"arrendadores",
						""
					]
				},
				"description": "Consulta un arrendador. La peticion no tiene cuerpo. Se envia el id el arrendador deseado por la URL de la peticion.\nCódigo http esperado: 200"
			},
			"response": []
		},
		{
			"name": "Obtener un arrendador que no existe ",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "f5d2552f-0fbf-4e46-a02e-2168e54c76d0",
						"type": "text/javascript",
						"exec": [
							"tests[\"No consulta con id que no existe\"] = responseCode.code === 404;",
							"tests[\"Mensaje correcto de error\"] = responseBody.has(\"El recurso /arrendadores/0 no existe.\");"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s3_vivienda-api/api/arrendadores/0",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s3_vivienda-api",
						"api",
						"arrendadores",
						"0"
					]
				},
				"description": "Consulta un arrendador que no existe en la aplicacion.  \r\n\r\nPara la prueba se verifica que se genera el error y el mensaje \"El recurso /arrendadores/0 no existe.\".\r\nCódigo http esperado: 404\r\n"
			},
			"response": []
		},
		{
			"name": "Actualizar arrendador",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "58f0ae4f-5e29-44e5-b82b-cff0b6023e9d",
						"type": "text/javascript",
						"exec": [
							"tests[\"No genera error en el Put\"] = responseCode.code === 200;"
						]
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\t\"nombre\": \"PedroPerez\",\r\n\t\"password\":\"654321\"     \r\n}"
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s3_vivienda-api/api/arrendadores/{{new_id_a}}",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s3_vivienda-api",
						"api",
						"arrendadores",
						"{{new_id_a}}"
					]
				},
				"description": "Actualiza un arrendador con los datos enviados en el cuerpo de la peticion. Se debe ver en la respuesta la actualizacion de los datos.\nCódigo http esperado: 200"
			},
			"response": []
		},
		{
			"name": "Acutalizar un arrendador que no existe",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "9d124f02-3068-458b-aeb2-13a0f085c80f",
						"type": "text/javascript",
						"exec": [
							"tests[\"No actualiza con id que no existe\"] = responseCode.code === 404;",
							"tests[\"Mensaje correcto de error\"] = responseBody.has(\"El recurso /arrendadores/0 no existe.\");"
						]
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"nombre\":\"Pedro\",\n\t\"login\":\"PedroPerez\",\n\t\"password\":\"123456\"\n\t\n}"
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s3_vivienda-api/api/arrendadores/0",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s3_vivienda-api",
						"api",
						"arrendadores",
						"0"
					]
				},
				"description": "Actualiza un arrendador. Verifica que se genera error y el mensaje \"El recurso /arrendadores/\"+ arrendadorId+\" no existe.\"\nCódigo http esperado: 404"
			},
			"response": []
		},
		{
			"name": "Eliminar arrendador",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "93b3fb9d-8c50-4a27-bc1d-e94532faa2d9",
						"type": "text/javascript",
						"exec": [
							"tests[\"no genera error en el Delete\"] = responseCode.code === 204;"
						]
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s3_vivienda-api/api/arrendadores/{{new_id_a}}",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s3_vivienda-api",
						"api",
						"arrendadores",
						"{{new_id_a}}"
					]
				},
				"description": "Elimina un arrendador. Se envia el id creado anteriormente.\nCódigo http esperado: 204"
			},
			"response": []
		},
		{
			"name": "Eliminar arrendador 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "45749651-d642-47dd-8ec7-0804d20ddf2a",
						"type": "text/javascript",
						"exec": [
							"tests[\"no genera error en el Delete\"] = responseCode.code === 204;"
						]
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s3_vivienda-api/api/arrendadores/{{new_id_a2}}",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s3_vivienda-api",
						"api",
						"arrendadores",
						"{{new_id_a2}}"
					]
				},
				"description": "Se elimina al segundo arrendador creado.\nCódigo http esperado: 204"
			},
			"response": []
		},
		{
			"name": "Eliminar arrendador que no existe",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "796bd16a-61a2-4be2-bcac-e8d580a3e5d4",
						"type": "text/javascript",
						"exec": [
							"tests[\"No borra con id que no existe\"] = responseCode.code === 404;",
							"tests[\"Mensaje correcto de error\"] = responseBody.has(\"El recurso /arrendadores/0 no existe.\");"
						]
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s3_vivienda-api/api/arrendadores/0",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s3_vivienda-api",
						"api",
						"arrendadores",
						"0"
					]
				},
				"description": "Elimina un arrendador que no existe en la aplicacion. Se verifica que genera un error y el mensaje \"El recurso /arrendadores/0 no existe\"\nCódigo http esperado: 404\n"
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "38650999-4602-421d-9630-477c6c1ff4f6",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "7fc175e2-8115-4e29-a37d-32910236dc18",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}